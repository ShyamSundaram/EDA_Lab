data<-read.csv("C:\\Users\\mails\\Downloads\\NYPD_Complaint_Data_Historic.csv")
data
str(data)
data$CMPLNT_FR_DT<-as.Date(data$CMPLNT_FR_DT,format="%m/%d/%Y")
str(data)
data1<-subset(data, CMPLNT_FR_DT>"12/31/2017")
data1<-subset(data, CMPLNT_FR_DT>"2017-12-31")
data1
tail(data1,10)
data1<-subset(data, CMPLNT_FR_DT>"2016-12-31")
data1
tail(data1,10)
nrow(data1)
data2<-na.omit(data1)
nrow(data2)
write.csv(data2,"C:\\Users\\mails\\Desktop\\NYC_slice.csv",row.names=FALSE)
data<-read.csv("C:\\Files\\Academics\\VIT\\Project\\FDA\\NYPD_Complaint_Data_Historic.csv")
data
str(data)
nrow(data)
data1<-na.omit(data)
nrow(data1)
min(data$CMPLNT_FR_DT)
# str(data)
# data1<-subset(data, CMPLNT_FR_DT>"2016-12-31")
# data1
# tail(data1,10)
# nrow(data1)
# data2<-na.omit(data1)
# nrow(data2)
# write.csv(data2,"C:\\Users\\mails\\Desktop\\NYC_slice.csv",row.names=FALSE)
nrow(data)
data$CMPLNT_FR_DT<-as.Date(data$CMPLNT_FR_DT,format="%m/%d/%Y")
data1<-na.omit(data)
nrow(data1)
min(data$CMPLNT_FR_DT)
min(data1$CMPLNT_FR_DT)
max(data1$CMPLNT_FR_DT)
data2<-subset(data, CMPLNT_FR_DT>"2016-12-31")
min(data2$CMPLNT_FR_DT)
nrow(data2)
data2<-na.omit(data2)
nrow(data2)
sapply(data,function(x) sum(is.na(x)))
data$TRANSIT_DISTRICT
data[,1]
data[,2]
parkcrime<-subset(data, (!is.na(data[,19])))
parkcrime
nrow(parkcrime)
sapply(data,function(x) sum(is.na(x)))
data$STATION_NAME
sum(data$STATION_NAME=="")
sum(data$STATION_NAME!="")
data$CMPLNT_FR_DT.YEAR
install.packages("tidyverse")
str(data)
data$Year<-substr(data$CMPLNT_FR_DT,1,4)
data$Year
sum(data$Year)
unique(data$Year)
library(dplyr)
count(data,'Year')
install.packages("lubridate")
aggregate(CMPLNT_NUM ~ Year, data=data, FUN = length)
getcwd()
getwd()
knitr::opts_chunk$set(echo = TRUE)
{
for(j in 1:6)
{
su[i+j]=m[i,j]+su[i+j]
}
}
m <- matrix(1/36, nrow=6, ncol=6)
su=rep(0,12)
su[2]
for (i in 1:6)
{
for(j in 1:6)
{
su[i+j]=m[i,j]+su[i+j]
}
}
su
m <- matrix(1/36, nrow=6, ncol=6)
su=rep(0,12)
for (i in 1:6)
{
for(j in 1:6)
{
su[i+j]=m[i,j]+su[i+j]
}
}
su[]
m <- matrix(1/36, nrow=6, ncol=6)
su=rep(0,12)
for (i in 1:6)
{
for(j in 1:6)
{
su[i+j]=m[i,j]+su[i+j]
}
}
su[2:12]
sequ<-c(1,1,1,2,3,2,3)
points<-0
points=points+1
points
sequ[i]
i
length(sequ)
i
sequ<-c(1,1,1,2,3,2,3)
points<-0
length(sequ)
for (i in 1:length(sequ)-2)
{
i
if ((sequ[i]%%2)==0 && (sequ[i+1]%%2)==0 && (sequ[i+2]%%2)==0)
{points=points-1000}
else if ((sequ[i]%%2)!=0 && (sequ[i+1]%%2)!=0 && (sequ[i+2]%%2)!=0)
{
points=points-1000
}
}
print(i)
sequ<-c(1,1,1,2,3,2,3)
points<-0
length(sequ)
for (i in 1:length(sequ)-2)
{
print(i)
if ((sequ[i]%%2)==0 && (sequ[i+1]%%2)==0 && (sequ[i+2]%%2)==0)
{points=points-1000}
else if ((sequ[i]%%2)!=0 && (sequ[i+1]%%2)!=0 && (sequ[i+2]%%2)!=0)
{
points=points-1000
}
}
sequ<-c(1,1,1,2,3,2,3)
points<-0
iter<-length(sequ)-2
for (i in 1:iter)
{
print(i)
if ((sequ[i]%%2)==0 && (sequ[i+1]%%2)==0 && (sequ[i+2]%%2)==0)
{points=points-1000}
else if ((sequ[i]%%2)!=0 && (sequ[i+1]%%2)!=0 && (sequ[i+2]%%2)!=0)
{
points=points-1000
}
}
points
---
title: "Lab12"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
### S Shyam Sundaram
### 19BCE1560
### 22nd October, 2021
### Dr. B. Radhika Selvamani
<br>
## Index
<hr/>
Click to go to the respective Question <br>
1. [Question 1](#q1) <br>
2. [Question 2](#q2) <br>
## <a name="q1"></a> Question 1
<hr/>
Q.Create a vector of all possible outcomes of throwing two dies.<br>
For eg.,<br>
1 ,1<br>
1,2<br>
1,3â€¦..<br>
Create a table which shows the sum of the two dies and the  probability of getting all possible sums starting from 2 till 12.
<br><br>
A.
```{r}
m <- matrix(1/36, nrow=6, ncol=6)
su=rep(0,12)
for (i in 1:6)
{
for(j in 1:6)
{
su[i+j]=m[i,j]+su[i+j]
}
}
su[2:12]
```
The array above shows the probability of getting a sum from 2 to 12 with a apair of dice.<br><br>
#
## <a name="q2"></a> Question 2
<hr/>
Q. A lucky draw organized by Company A has the following rules<br>
a.	If three consecutive numbers are even the player looses Rs.1000<br>
b.	 If three consecutive numbers are odd the player looses Rs.1000<br>
For a given sequence of numbers, findout how much the player has lost or gained at the end.<br><br>
A.
```{r}
sequ<-c(1,1,1,2,2,2,3)
points<-0
iter<-length(sequ)-2
for (i in 1:iter)
{
if ((sequ[i]%%2)==0 && (sequ[i+1]%%2)==0 && (sequ[i+2]%%2)==0)
{points=points-1000}
else if ((sequ[i]%%2)!=0 && (sequ[i+1]%%2)!=0 && (sequ[i+2]%%2)!=0)
{
points=points-1000
}
}
points
```
<br>Total points are shown above.<br>
sequ<-c(1,1,1,2,2,2,3)
points<-0
iter<-length(sequ)-2
for (i in 1:iter)
{
if ((sequ[i]%%2)==0 && (sequ[i+1]%%2)==0 && (sequ[i+2]%%2)==0)
{points=points-1000}
else if ((sequ[i]%%2)!=0 && (sequ[i+1]%%2)!=0 && (sequ[i+2]%%2)!=0)
{
points=points-1000
}
}
jjh
sequ<-c(1,1,1,2,2,2,3)
points<-0
iter<-length(sequ)-2
for (i in 1:iter)
{
sequ[i:i+2]
if (all((sequ[i:i+2]%%2)==0))
{points=points-1000}
else if (all((sequ[i:i+2]%%2)!=0))
{
points=points-1000
}
}
sequ<-c(1,1,1,2,2,2,3)
points<-0
iter<-length(sequ)-2
for (i in 1:iter)
{
print(sequ[i:i+2])
if (all((sequ[i:i+2]%%2)==0))
{points=points-1000}
else if (all((sequ[i:i+2]%%2)!=0))
{
points=points-1000
}
}
points
clc
vec <- c(1,"hello",TRUE)
CLEAR
getwd
getwd()
getwd()
setwd("C:/Files/Academics/VIT/Lab/EDA/Lab1")
getwd()
setwd("C:/Files/Academics/VIT/Lab/EDA/Lab1")
x<-1:5
y<-c(3,5,7,9,11)
data_set=data.frame(x,y)
data_set
View(data_set)
str(data_set)
names(data_set)
plot(x,y)
LR_result<-lm(y~x)
LR_result
summary(LR_result)
abline(LR_result)
x=data.frame(x=6:8)
R<-predict(LR_result,x)
R
x=data.frame(x=c(6,7,8))
R1<-predict(LR_result,x)
R1
summary(R1)
setwd("C:/Files/Academics/VIT/Lab/EDA/Lab1")
x<-c(200,500,700,1000)
y<-c(0.25,0.5,0.8,1.5)
data_set=data.frame(x,y)
data_set
View(data_set)
str(data_set)
names(data_set)
plot(x,y)
LR_result<-lm(y~x)
LR_result
summary(LR_result)
abline(LR_result)
#x=data.frame(x=6:8)
#R<-predict(LR_result,x)
#R
#x=data.frame(x=c(6,7,8))
#R1<-predict(LR_result,x)
#R1
#summary(R1)
setwd("C:/Files/Academics/VIT/Lab/EDA/Lab1")
x<-c(200,500,700,1000)
y<-c(0.25,0.5,0.8,1.5)
data_set=data.frame(x,y)
data_set
View(data_set)
str(data_set)
names(data_set)
plot(x,y)
LR_result<-lm(y~x)
LR_result
summary(LR_result)
abline(LR_result)
setwd("C:/Files/Academics/VIT/Lab/EDA/Lab1")
x<-c(200,500,700,1000)
y<-c(0.25,0.5,0.8,1.5)
data_set=data.frame(x,y)
data_set
View(data_set)
str(data_set)
names(data_set)
plot(x,y)
LR_result<-lm(y~x)
LR_result
summary(LR_result)
abline(LR_result)
x=data.frame(x=1:3)
R<-predict(LR_result,x)
R
setwd("C:/Files/Academics/VIT/Lab/EDA/Lab1")
x<-c(200,500,700,1000)
y<-c(0.25,0.5,0.8,1.5)
data_set=data.frame(x,y)
data_set
View(data_set)
str(data_set)
names(data_set)
plot(x,y)
LR_result<-lm(y~x)
LR_result
summary(LR_result)
abline(LR_result)
x=data.frame(x=c(1500,2000,2500))
R<-predict(LR_result,x)
R
summary(R)
setwd("C:/Files/Academics/VIT/Lab/EDA/Lab1")
x<-c(200,500,700,1000)
y<-c(0.25,0.5,0.8,1.5)
data_set=data.frame(x,y)
data_set
View(data_set)
str(data_set)
names(data_set)
plot(x,y)
LR_result<-lm(y~x)
LR_result
summary(LR_result)
abline(LR_result)
x=data.frame(x=c(1200))
R<-predict(LR_result,x)
R
summary(R)
setwd("C:/Files/Academics/VIT/Lab/EDA/19BCE1560/Lab1")
x<-c(200,500,700,1000)
y<-c(0.25,0.5,0.8,1.5)
data_set=data.frame(x,y)
data_set
View(data_set)
str(data_set)
names(data_set)
plot(x,y)
LR_result<-lm(y~x)
LR_result
knitr::opts_chunk$set(echo = TRUE)
LR_result<-lm(y~x)
LR_result
summary(LR_result)
abline(LR_result,col="blue")
abline(lm(y~x),col="blue")
plot(x,y)
LR_result<-lm(y~x)
LR_result
summary(LR_result)
{abline}(LR_result,col="blue")}
{abline(LR_result,col="blue")}
LR_result<-lm(y~x)
LR_result
summary(LR_result)
abline(LR_result,col="blue")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(caret)
setwd("C:/Files/Academics/VIT/Lab/EDA/19BCE1560/Lab5")
mydata <- read.csv("admission.csv")#file.choose(),header=T)
str(mydata)
head(mydata)
summary(mydata)
hist(mydata$admit,col="blue")
mydata$admit<-as.factor(mydata$admit)
summary(mydata)
#partitioning and training
train_ind=createDataPartition(mydata$admit,p=0.80,list=F)
train_ds=mydata[train_ind,]
test_ds=mydata[-train_ind,]
my_model=glm(admit~.,data=train_ds,family="binomial") #admit~. means admit is 'y' and all other attributes are the 'x' attributes
summary(my_model)
#testing on train data
pred_train=predict(my_model,train_ds,type="response")
pred_train
pred_train=ifelse(pred_train>0.5,1,0)
tab1<-table(Predicted=pred_train,Actual=train_ds$admit)
tab1 #this is the confusion matrix
1-sum(diag(tab1))/sum(tab1) # misclassification error
#testing on train data
pred_train=predict(my_model,train_ds)
pred_train
pred_train=ifelse(pred_train>0.5,1,0)
tab1<-table(Predicted=pred_train,Actual=train_ds$admit)
tab1 #this is the confusion matrix
1-sum(diag(tab1))/sum(tab1) # misclassification error
#testing on train data
pred_train=predict(my_model,train_ds,type="response")
pred_train
pred_train=ifelse(pred_train>0.5,1,0)
tab1<-table(Predicted=pred_train,Actual=train_ds$admit)
tab1 #this is the confusion matrix
1-sum(diag(tab1))/sum(tab1) # misclassification error
#testing on train data
pred_train=predict(my_model,train_ds)
pred_train
pred_train=ifelse(pred_train>0.5,1,0)
tab1<-table(Predicted=pred_train,Actual=train_ds$admit)
tab1 #this is the confusion matrix
1-sum(diag(tab1))/sum(tab1) # misclassification error
